<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        A24o/wAAAABJRU5ErkJggg==
</value>
  </data>
</root>